generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// ============================================
// USER MODEL
// ============================================
model User {
  id               Int       @id @default(autoincrement())
  email            String    @unique
  name             String?
  password         String
  role             Role      @default(USER)
  isEmailVerified  Boolean   @default(false)
  tokenVersion     Int       @default(0)  // 전체 로그아웃용
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  // Relations
  refreshTokens      RefreshToken[]
  verificationTokens VerificationToken[]

  @@index([email])
}

// ============================================
// REFRESH TOKEN (장기 토큰만 DB 저장)
// ============================================
model RefreshToken {
  id          String   @id @default(cuid())
  token       String   @unique @db.VarChar(255)  // hashed token
  userId      Int

  // 기기/세션 추적
  deviceId    String?  @db.VarChar(255)  // 기기 식별자
  deviceInfo  String?  @db.Text          // User-Agent 등
  ipAddress   String?  @db.VarChar(45)   // IPv6 지원

  // 시간 정보
  expiresAt   DateTime
  createdAt   DateTime @default(now())
  lastUsedAt  DateTime @default(now())

  // Relations
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([token])
  @@index([expiresAt])  // 만료 토큰 정리용
  @@index([userId, deviceId])  // 기기별 조회용
}

// ============================================
// VERIFICATION TOKEN (일회용 토큰)
// ============================================
model VerificationToken {
  id        Int       @id @default(autoincrement())
  token     String    @unique @db.VarChar(255)  // hashed token
  type      VerificationTokenType
  userId    Int

  expiresAt DateTime
  createdAt DateTime  @default(now())
  used      Boolean   @default(false)
  usedAt    DateTime?

  // Relations
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([token, used])
  @@index([userId, type])
  @@index([expiresAt])  // 만료 토큰 정리용
}

// ============================================
// ENUMS
// ============================================
enum Role {
  USER
  ADMIN
}

enum VerificationTokenType {
  VERIFY_EMAIL
  RESET_PASSWORD
}
